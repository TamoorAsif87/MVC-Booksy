@model BookDto
@inject IViewLocalizer L
@{
    ViewData["Title"] = Model.Title;
    var recommendedBooks = ViewBag.recommendedBooks as List<BookDto>;
    string bookCover = Model.BookCover ?? "/images/default-book.png";
    var discountedPrice = Model.Price * (1 - Model.Discount / 100 );
}

<div class="container py-5">
    <div class="card border-0 shadow-lg mb-5">
        <div class="row g-0">
            <!-- Book Cover Image -->
            <div class="col-md-4 d-flex align-items-center justify-content-center bg-light p-4">
                <img src="@bookCover"
                     alt="@Model.Title"
                     class="img-fluid rounded"
                     style="max-height: 400px; max-width: 100%; object-fit: contain;" />
            </div>

            <!-- Book Information -->
            <div class="col-md-8">
                <div class="card-body p-4 d-flex flex-column h-100">
                    <h2 class="card-title fw-bold">@Model.Title</h2>
                    <p class="text-muted">@L["ByAuthor"] <strong>@Model.Author</strong></p>
                    <p class="text-secondary small">@L["Published"]: @Model.PublishedDate.ToString("MMMM dd, yyyy")</p>

                    <!-- Ratings -->
                    <div class="mb-3">
                        <span class="text-warning fw-semibold">@Model.AverageRating.ToString("0.0") ★</span>
                        <small class="text-muted">(@Model.TotalReviews @L["Reviews"])</small>
                    </div>

                    <!-- Pricing -->
                    <div class="mb-3">
                        @if (Model.Discount > 0)
                        {
                            <h4 class="text-danger fw-bold mb-0">$@discountedPrice.ToString("0.00")</h4>
                            <small class="text-muted text-decoration-line-through me-2">$@Model.Price.ToString("0.00")</small>
                            <span class="badge bg-success">@Model.Discount @L["Off"]</span>
                        }
                        else
                        {
                            <h4 class="text-danger fw-bold">$@Model.Price.ToString("0.00")</h4>
                        }
                    </div>

                    <!-- Description -->
                    <p class="text-dark mb-4" style="line-height: 1.6;">@Model.Description</p>

                    <!-- Add to Cart Form -->
                    <form asp-action="AddToCart" asp-controller="Cart" method="post" class="mt-auto">
                        <input type="hidden" name="BookId" value="@Model.Id" />
                        <input type="hidden" name="BookCover" value="@Model.BookCover" />
                        <input type="hidden" name="bookId" value="@Model.CategoryName" />
                        <input type="hidden" name="Name" value="@Model.Title" />
                        <input type="hidden" name="Author" value="@Model.Author" />
                        <input type="hidden" name="Price" value="@discountedPrice" />
                        <div class="input-group w-50 mb-2">
                            <label class="input-group-text" for="Quantity">@L["Quantity"]</label>
                            <input type="number"
                                   id="quantity"
                                   name="quantity"
                                   class="form-control"
                                   value="1"
                                   min="1"
                                   max="@Model.Available" />
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-cart-plus me-1"></i> @L["AddToCart"]
                            </button>
                        </div>
                        <small class="text-muted">@L["Available"]: @Model.Available @L["InStock"]</small>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Recommended Books -->
    @if (recommendedBooks != null && recommendedBooks.Any())
    {
        <hr class="my-5" />
        <h3 class="mb-4">@L["Recommended Books"]</h3>

        <div class="row row-cols-1 row-cols-md-4 g-4">
            @foreach (var book in recommendedBooks)
            {
              

                <div class="col">
                    <partial name="_BookCardPartialView" model="@book"/>
                    
                </div>
            }
        </div>
    }

    <!-- Reviews Section -->
    <div class="my-5">
        <h3 class="mb-3">@L["Customer Reviews"]</h3>


        <div id="bookReviews">
            <partial name="_BookReviews" model="Model.Reviews" />
        </div>

        <!-- Create Review Form -->
        <div class="mb-5">
            <h4 class="mb-3">@L["Write A Review"]</h4>
            @await Html.PartialAsync("_CreateReviewPartial", new ReviewDto
            {
                BookId = Model.Id,
                ReviewTime = DateTime.UtcNow,
                
            })
        </div>

    </div>


</div>
