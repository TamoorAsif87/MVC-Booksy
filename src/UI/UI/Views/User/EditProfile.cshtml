@model UserProfile
@inject IViewLocalizer L

@{
    ViewBag.Title = $"{Model.Name}'s {L["Profile"]}";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow rounded-4 border-0">
                <div class="card-body p-4">
                    <h3 class="text-center mb-4">@L["UpdateProfileHeading"]</h3>

                    <form asp-action="Profile" method="post" enctype="multipart/form-data">
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="ApplicationUserId" />

                        <div class="text-center mb-4">
                            @if (!string.IsNullOrEmpty(Model.ProfilePicture))
                            {
                                <img id="imagePreview" src="@Model.ProfilePicture" class="rounded-circle border object-fit-cover" width="100" height="100" />
                            }
                            else
                            {
                                <div class="rounded-circle bg-success text-white d-flex justify-content-center align-items-center mx-auto" id="InitialPreview"
                                     style="width:100px;height:100px;font-size:36px;">
                                    @Model.Name?.FirstOrDefault().ToString().ToUpper()
                                </div>
                                <img id="imagePreview" src="@Model.ProfilePicture" class="rounded-circle border d-none object-fit-cover" width="100" height="100" />
                            }
                        </div>

                        <div class="mb-3">
                            <label class="form-label">@L["ProfilePictureLabel"]</label>
                            <div class="input-group">
                                <input type="file" name="file" id="file" accept="image/*" class="d-none">
                                <label for="file" class="btn btn-primary">@L["UploadButton"]</label>
                                <span id="file-name" class="form-control bg-light text-muted">@L["NoFileChosen"]</span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="UserName" class="form-label"></label>
                            <input asp-for="UserName" class="form-control" readonly />
                            <span asp-validation-for="UserName" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" readonly />
                            <span asp-validation-for="Email" class="text-danger small"></span>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">@L["SaveChanges"]</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const initialPreview = document.getElementById('InitialPreview');
        const imagePreview = document.getElementById('imagePreview');

        document.getElementById('file').addEventListener('change', function(event){
            const file = event.target.files[0];

            if(file && file.type.startsWith("image/")){
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.classList.remove('d-none');
                    if(initialPreview) initialPreview.classList.add('d-none');
                };
                reader.readAsDataURL(file);
            } else {
                alert("@L["InvalidImageMessage"]");
                imagePreview.classList.add('d-none');
                if(initialPreview){
                    initialPreview.style.display = 'flex';
                }
            }
        });
    </script>
}
